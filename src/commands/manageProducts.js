import { adminProductManagementMenu } from "../keyboards/menu.js";
import startCommand from "./start.js";
import Category from "../mongodb/schemes/category.js";

export default async function manageProductsCommand(bot, chatId) {
    await bot.sendMessage(chatId, "üéÅ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π üìú", {
        reply_markup: {
            keyboard: adminProductManagementMenu,
            resize_keyboard: true,
        },
    });
}

export async function handleManageProducts(bot, msg) {
    const chatId = msg.chat.id;
    const text = msg.text;

    switch (text) {
        case "üéÅ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã ‚ûï":
            if (condition) {

            } else {
                await bot.sendMessage(chatId, "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.");
            }
            break;

        case "üéÅ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä—ã üñç":
            await bot.sendMessage(chatId, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...");
            break;

        case "üéÅ –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä—ã ‚ùå":
            await bot.sendMessage(chatId, "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...");
            break;

        case "üìÅ –°–æ–∑–¥–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é ‚ûï":
            if (condition) {

            } else {
                await bot.sendMessage(chatId, "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏.");
            }
            break;

        case "üìÅ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é üñç":
            await bot.sendMessage(chatId, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏...");
            break;

        case "üìÅ –£–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏–∏ ‚ùå":
            await bot.sendMessage(chatId, "–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π...");
            break;

        case "üìú –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚ûï":
            await bot.sendMessage(chatId, "üìú –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ üè∑")
            await bot.on("message", async (msg) => {
                const text = msg.text;
                const newCategory = new Category({
                    categoryName: text,
                });
                newCategory.save();
                console.log("Category created: ", newCategory.categoryName);
            }) 
            break;

        case "üìú –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é üñç":
            await bot.sendMessage(chatId, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...");
            break;

        case "üìú –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚ùå":
            await bot.sendMessage(chatId, "–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...");
            break;

        case "‚¨ÖÔ∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é":
            await startCommand(bot, chatId, msg.from);
            break;

        default:
            await bot.sendMessage(chatId, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.");
    }
}