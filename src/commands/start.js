import User from "../mongodb/schemes/user.js";
import { mainMenu, adminMenu } from "../keyboards/menu.js"; // –ò–º–ø–æ—Ä—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä


export default async function startCommand(bot, chatId, user) {
    try {
        const { id: userId, username, first_name: firstName } = user;

        console.log("User data from Telegram:", user);

        if (!userId) {
            throw new Error("userId –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null –∏–ª–∏ undefined");
        }

        let dbUser = await User.findOne({ userId });

        if (!dbUser) {
            dbUser = new User({
                userId,
                username: username || "–ë–µ–∑ –∏–º–µ–Ω–∏",
                firstName,
                balance: 0,
                isAdmin: false,
            });
            await dbUser.save();
        }

        const menu = dbUser.isAdmin ? adminMenu : mainMenu;

        await bot.sendPhoto(chatId, './main_menu.jpg', {
            caption: `üëãüèª –ü—Ä–∏–≤–µ—Ç–∏–∫, ${firstName} \n\nüíô–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∞–º—ã–π –ª—É—á—à–∏–π –∏ –æ—Ç–∑—ã–≤—á–∏–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –ø–æ –ø—Ä–æ–¥–∞–∂–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.`,
            reply_markup: {
                keyboard: menu,
                resize_keyboard: true,
            },
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
        bot.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
}