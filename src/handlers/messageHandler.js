import startCommand from "../commands/start.js";
import profileCommand from "../commands/profile.js";
import productsCommand from "../commands/products.js";
import manageProductsCommand, { handleManageProducts } from "../commands/manageProducts.js";
import supportCommand from "../commands/support.js";
import infoCommand from "../commands/info.js";
import { mainMenu, adminMenu } from "../keyboards/menu.js";
import User from "../mongodb/schemes/user.js";
import referalSystem from "../commands/referals.js";

export default async function messageHandler(bot, msg) {
    const chatId = msg.chat.id;
    const text = msg.text;
    const userId = msg.from.id;

    try {
        const user = await User.findOne({ userId });

        if (!user) {
            const newUser = new User({
                userId,
                username: msg.from.username || "–ë–µ–∑ –∏–º–µ–Ω–∏",
                firstName: msg.from.first_name,
                balance: 0,
                isAdmin: false,
            });
            await newUser.save();
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        switch (text) {
            case "/start":
                await startCommand(bot, chatId, msg.from);
                break;

            case "üõç –¢–æ–≤–∞—Ä—ã":
                await productsCommand(bot, chatId);
                break;

            case "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
                await profileCommand(bot, chatId, userId);
                break;

            case "üìù –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
                await supportCommand(bot, chatId);
                break;

            case "üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
                await infoCommand(bot, chatId);
                break;

            case "üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ üñç":
                if (user.isAdmin) {
                    await manageProductsCommand(bot, chatId);
                } else {
                    await bot.sendMessage(chatId, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.");
                }
                break;

            case "üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ üéÅ":
                await referalSystem(bot, chatId);
                break;

            default:
                if (user.isAdmin && (text.startsWith("üéÅ") || text.startsWith("üìÅ") || text.startsWith("üìú") || text === "‚¨ÖÔ∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é")) {
                    await handleManageProducts(bot, msg);
                } else {
                    await bot.sendMessage(chatId, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.");
                }
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        await bot.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
}